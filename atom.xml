<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YuriCode</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-11-19T03:38:43.260Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LunaMyth</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二分查找法</title>
    <link href="http://example.com/2024/11/19/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95/"/>
    <id>http://example.com/2024/11/19/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95/</id>
    <published>2024-11-19T03:37:01.000Z</published>
    <updated>2024-11-19T03:38:43.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二分查找法"><a href="#二分查找法" class="headerlink" title="二分查找法"></a>二分查找法</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;二分查找法&quot;&gt;&lt;a href=&quot;#二分查找法&quot; class=&quot;headerlink&quot; title=&quot;二分查找法&quot;&gt;&lt;/a&gt;二分查找法&lt;/h2&gt;</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>高精度算法</title>
    <link href="http://example.com/2024/11/18/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2024/11/18/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95/</id>
    <published>2024-11-17T16:33:36.000Z</published>
    <updated>2024-11-19T03:38:45.102Z</updated>
    
    <content type="html"><![CDATA[<h2 id="高精度算法"><a href="#高精度算法" class="headerlink" title="高精度算法"></a>高精度算法</h2><p>高精度算法主要用于处理比普通数据类型更大的数值。普通的数据类型（如 <code>int</code>, <code>long long</code>）无法满足对非常大的数进行计算时的需求。高精度算法通过模拟手工运算过程，逐位处理数字，保证了数值的准确性和有效性。</p><p>在高精度运算中，常见的操作包括加法、减法、乘法等，它们通常在字符串中以逐位的方式实现，以应对超过普通数据类型范围的数值。</p><span id="more"></span><h3 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h3><p>去除字符串的前导零</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">RE0</span> <span class="params">(string &amp; str)</span> </span>&#123;</span><br><span class="line">    str.<span class="built_in">erase</span>(<span class="number">0</span>, str.<span class="built_in">find_first_not_of</span>(<span class="string">&quot;0&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span> (str.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        str = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h3><p>高精度加法通过逐位加法和进位处理来模拟实际的加法过程。下面是加法实现代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">add</span><span class="params">(string str1, string str2)</span> </span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="type">int</span> len1 = str<span class="number">1.</span><span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> len2 = str<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对齐两个字符串长度</span></span><br><span class="line">    <span class="keyword">if</span> (len1 &gt; len2) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len1 - len2; i++) &#123;</span><br><span class="line">            str2 = <span class="string">&quot;0&quot;</span> + str2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (len2 &gt; len1) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len2 - len1; i++) &#123;</span><br><span class="line">            str1 = <span class="string">&quot;0&quot;</span> + str1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> cf = <span class="number">0</span>; <span class="comment">// 进位</span></span><br><span class="line">    len1 = str<span class="number">1.</span><span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len1 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = str1[i] - <span class="string">&#x27;0&#x27;</span> + str2[i] - <span class="string">&#x27;0&#x27;</span> + cf;</span><br><span class="line">        cf = temp / <span class="number">10</span>;  <span class="comment">// 更新进位</span></span><br><span class="line">        str = <span class="built_in">to_string</span>(temp % <span class="number">10</span>) + str;  <span class="comment">// 拼接结果</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (cf != <span class="number">0</span>) str = <span class="built_in">to_string</span>(cf) + str;  <span class="comment">// 如果有最终进位，加到结果前面</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度减法"><a href="#高精度减法" class="headerlink" title="高精度减法"></a>高精度减法</h3><p>高精度减法通过逐位减法和借位处理来模拟实际的减法过程。代码实现如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">sub</span><span class="params">(string str1, string str2)</span> </span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="type">int</span> len1 = str<span class="number">1.</span><span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> len2 = str<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对齐两个字符串长度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len1 - len2; i++) &#123;</span><br><span class="line">        str2 = <span class="string">&quot;0&quot;</span> + str2;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> br = <span class="number">0</span>; <span class="comment">// 借位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len1 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = (str1[i] - <span class="string">&#x27;0&#x27;</span>) - (str2[i] - <span class="string">&#x27;0&#x27;</span>) - br;</span><br><span class="line">        <span class="keyword">if</span> (temp &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            temp += <span class="number">10</span>;  <span class="comment">// 处理借位</span></span><br><span class="line">            br = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            br = <span class="number">0</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        str = <span class="built_in">to_string</span>(temp) + str;  <span class="comment">// 拼接结果</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">RE0</span>(str);  <span class="comment">// 去除多余的前导零</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h3><p>高精度乘法通过逐位乘法和进位处理来模拟实际的乘法过程。实现代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">mul</span><span class="params">(string str1, string str2)</span> </span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="type">int</span> len1 = str<span class="number">1.</span><span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> len2 = str<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line">    string tempstr;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len2 - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = str2[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        tempstr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> cf = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (temp != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 添加对应的零</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= len2 - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                tempstr = tempstr + <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 乘法运算</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = len1 - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">                t = (temp * (str1[j] - <span class="string">&#x27;0&#x27;</span>) + cf) % <span class="number">10</span>;</span><br><span class="line">                cf = (temp * (str1[j] - <span class="string">&#x27;0&#x27;</span>) + cf) / <span class="number">10</span>;</span><br><span class="line">                tempstr = <span class="built_in">to_string</span>(t) + tempstr;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (cf != <span class="number">0</span>) tempstr = <span class="built_in">to_string</span>(cf) + tempstr;  <span class="comment">// 添加进位</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 累加到结果</span></span><br><span class="line">        str = <span class="built_in">add</span>(str, tempstr);  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">RE0</span>(str);  <span class="comment">// 去除前导零</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;高精度算法&quot;&gt;&lt;a href=&quot;#高精度算法&quot; class=&quot;headerlink&quot; title=&quot;高精度算法&quot;&gt;&lt;/a&gt;高精度算法&lt;/h2&gt;&lt;p&gt;高精度算法主要用于处理比普通数据类型更大的数值。普通的数据类型（如 &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long long&lt;/code&gt;）无法满足对非常大的数进行计算时的需求。高精度算法通过模拟手工运算过程，逐位处理数字，保证了数值的准确性和有效性。&lt;/p&gt;
&lt;p&gt;在高精度运算中，常见的操作包括加法、减法、乘法等，它们通常在字符串中以逐位的方式实现，以应对超过普通数据类型范围的数值。&lt;/p&gt;</summary>
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
</feed>
